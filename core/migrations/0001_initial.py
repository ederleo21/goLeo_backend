# Generated by Django 5.0.9 on 2025-03-29 14:05

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dni', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, default='users/user-default.webp', null=True, upload_to='users/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='Nombre')),
                ('code', models.CharField(max_length=3, unique=True, verbose_name='Código')),
                ('flag', models.ImageField(default='country/bandera.jpg', upload_to='country/', verbose_name='Bandera')),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Pais',
                'verbose_name_plural': 'Paises',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='core_countr_name_5737bb_idx')],
            },
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nombre')),
                ('location', models.CharField(max_length=100, verbose_name='Locacion')),
                ('established', models.DateField(default=django.utils.timezone.now, verbose_name='Fecha de establecimiento')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='club/', verbose_name='Escudo')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripcion')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('phone', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Caracteres inválidos para un número de teléfono.', regex='^\\d{9,15}$')], verbose_name='Telefono')),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('active', models.BooleanField(default=True, verbose_name='Activo')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clubs', to='core.country', verbose_name='Pais')),
            ],
            options={
                'verbose_name': 'Club',
                'verbose_name_plural': 'Clubes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Nombre')),
                ('last_name', models.CharField(max_length=50, verbose_name='Apellido')),
                ('date_of_birth', models.DateField(verbose_name='Fecha de Nacimiento')),
                ('photo', models.ImageField(blank=True, default='players/player_default.jpg', null=True, upload_to='players/', verbose_name='Foto del jugador')),
                ('dorsal', models.PositiveIntegerField(default=0, verbose_name='Dorsal')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='Caracteres inválidos para un número de teléfono.', regex='^\\d{9,15}$')], verbose_name='Telefono')),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('active', models.BooleanField(default=True, verbose_name='Activo')),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='core.club', verbose_name='Club')),
                ('nationality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='core.country', verbose_name='Nacionalidad')),
            ],
            options={
                'verbose_name': 'Jugador',
                'verbose_name_plural': 'Jugadores',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='PlayerSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passing', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Pase')),
                ('shooting', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Tiro')),
                ('dribbling', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Regate')),
                ('defense', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Defensa')),
                ('physical', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Físico')),
                ('speed', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Velocidad')),
                ('vision', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Visión')),
                ('goalkeeping', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Atajada')),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('player', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='core.player', verbose_name='Jugador')),
            ],
            options={
                'verbose_name': 'Habilidad del Jugador',
                'verbose_name_plural': 'Habilidades del Jugador',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=30, unique=True, verbose_name='Posición')),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Posición',
                'verbose_name_plural': 'Posiciones',
                'ordering': ['description'],
                'indexes': [models.Index(fields=['description'], name='core_positi_descrip_afade0_idx')],
            },
        ),
        migrations.AddField(
            model_name='player',
            name='position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='players', to='core.position', verbose_name='Posición'),
        ),
        migrations.AddIndex(
            model_name='club',
            index=models.Index(fields=['name'], name='core_club_name_fb94dc_idx'),
        ),
        migrations.AddIndex(
            model_name='player',
            index=models.Index(fields=['last_name'], name='core_player_last_na_9db130_idx'),
        ),
    ]
